version: '3.8'

name: dai-lab-http

services:
  web:
    container_name: web
    build: ./frontend
    labels:
      # Explicitly tell Traefik to expose this container at the specified path
      - "traefik.enable=true"
      - "traefik.http.routers.static.rule=Host(`localhost`) && PathPrefix(`/`)"
      - "traefik.http.services.static.loadbalancer.server.port=80"

  mongo:
    container_name: mongodb
    image: mongo:latest
    env_file:
      - .env
    ports:
      - "27017:27017"

  mongo-seed:
    env_file:
      - .env
    build:
      context: ./db
      dockerfile: Dockerfile
      args:
        - MONGODB_URI=$DATABASE_URI
        - MONGODB_HOST=$MONGO_INITDB_ROOT_HOST
        - MONGODB_USERNAME=$MONGO_INITDB_ROOT_USERNAME
        - MONGODB_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    depends_on:
      - mongo

  api:
    container_name: api
    env_file:
      - .env
    build:
      context: ./api
      dockerfile: Dockerfile
      args:
        - MONGODB_URI=$DATABASE_URI
        - MONGODB_HOST=$MONGO_INITDB_ROOT_HOST
        - MONGODB_USERNAME=$MONGO_INITDB_ROOT_USERNAME
        - MONGODB_PASSWORD=$MONGO_INITDB_ROOT_PASSWORD
    labels:
      # Explicitly tell Traefik to expose this container at the specified path
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`) && PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=7000"
    depends_on:
      - mongo
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.10
    # Enables the web UI and tells Traefik to listen to docker
    command: --api.insecure=true --providers.docker --log.level=DEBUG --accesslog=true
    ports:
      # The HTTP port
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
